<Activity mc:Ignorable="sap sap2010" x:Class="GetTransactionData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="out_TransactionItem" Type="OutArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Allow the optional addition of information about the transaction item." Name="out_TransactionField1" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allow the optional addition of information about the transaction item." Name="out_TransactionField2" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="out_TransactionID" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="This variable can be used in case transactions are stored in a DataTable (for example, after being retrieved from a spreadsheet)." Name="io_TransactionData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_AddQueueItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_CheckIfInQueue" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1750,3325</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetTransactionData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get a transaction item from a specified source (e.g., Orchestrator queues, spreadsheets, databases, mailboxes or web APIs). &#xA;&#xA;If there are no transaction items remaining, out_TransactionItem is set to Nothing, which leads to the End Process state. &#xA;&#xA;For cases in which there is only a single transaction (i.e., a linear process), use an If activity to check whether the argument in_TransactionNumber has the value 1 (meaning it is the first and only transaction) and assign the transaction item to out_TransactionItem. For any other value of in_TransactionNumber, out_TransactionItem should be set to Nothing.&#xA;&#xA;If there are multiple transactions, use the argument in_TransactionNumber as an index to retrieve the correct transaction to be processed. If there are no more transactions left, it is necessary to set out_TransactionItem to Nothing, thus ending the process." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="1760,3260" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="ExportFrånWP" Name="StorageBucketName" />
      <Variable x:TypeArguments="x:String" Name="QueueName" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="BlacklistedURLs" />
      <Variable x:TypeArguments="sxl:XNamespace" Default="[&quot;http://wordpress.org/export/1.2/&quot;]" Name="WPNamespace" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="Lägg in URLs" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1718,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[StorageBucketName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("Storage Bucket Name").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[QueueName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("OrchestratorQueueName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[BlacklistedURLs]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String) from {in_Config("Blacklisted URLs").ToString}]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <If Condition="[in_TransactionNumber = 1 And in_AddQueueItems = True]" DisplayName="If First RUn" sap:VirtualizedContainerService.HintSize="1718,1882" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="1446,1734" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" Name="StorageFiles" />
            <Variable x:TypeArguments="x:String" Name="NewestFile" />
            <Variable x:TypeArguments="x:String" Name="XMLString" />
            <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="ItemsObjectCollection" />
            <Variable x:TypeArguments="x:Object" Name="ItemsObject" />
            <Variable x:TypeArguments="scg:IEnumerable(sxl:XNode)" Name="XMLNodes" />
            <Variable x:TypeArguments="sxl:XNamespace" Default="[&quot;http://purl.org/dc/elements/1.1/&quot;]" Name="DCNamespace" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ucas:ReadStorageText TimeoutMS="{x:Null}" DisplayName="Private: Read Storage Text" Encoding="utf-8" FolderPath="[in_Config(&quot;FolderPathOrch&quot;).ToString.Trim]" sap:VirtualizedContainerService.HintSize="1404,22" sap2010:WorkflowViewState.IdRef="ReadStorageText_1" Path="[in_Config(&quot;FileNameExport&quot;).ToString.Trim]" Result="[XMLString]" StorageBucketName="[StorageBucketName]" />
          <ui:GetNodes ExistingXML="{x:Null}" DisplayName="Private: Get XML Nodes" sap:VirtualizedContainerService.HintSize="1404,60" sap2010:WorkflowViewState.IdRef="GetNodes_1" XMLNodes="[XMLNodes]" XMLString="[XMLString]" />
          <ui:ExecuteXPath ExistingXML="{x:Null}" DisplayName="Private: Execute XPath" sap:VirtualizedContainerService.HintSize="1404,89" sap2010:WorkflowViewState.IdRef="ExecuteXPath_1" Result="[ItemsObject]" XMLString="[XMLString]" XPathExpression="//*[local-name()='item']/*[local-name()='status' and text()='publish']/../*[local-name()='post_type' and text()='contact_persons']/.." />
          <Assign DisplayName="Private: Assign" sap:VirtualizedContainerService.HintSize="1404,60" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">[ItemsObjectCollection]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">[Ctype(ItemsObject, IEnumerable(of Object))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1404,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Läst in &quot; + ItemsObjectCollection.Count.ToString + &quot; st sidor&quot;]" />
          <Assign DisplayName="Private: Assign" sap:VirtualizedContainerService.HintSize="1404,60" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">[ItemsObjectCollection]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">[ItemsObjectCollection.OrderBy(function (n) (Ctype(n, XElement).Element("link").Value))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="Private: For Each" sap:VirtualizedContainerService.HintSize="1404,1020" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ItemsObjectCollection]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sxl:XElement">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sxl:XElement" Name="node" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1368,886" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sxl:XNamespace" Default="[&quot;http://purl.org/rss/1.0/modules/content/&quot;]" Name="ContentNamespace" />
                    <Variable x:TypeArguments="x:String" Name="BodyText" />
                    <Variable x:TypeArguments="x:String" Name="NodeText" />
                    <Variable x:TypeArguments="x:String" Name="PageTitle" />
                    <Variable x:TypeArguments="x:String" Name="PageLink" />
                    <Variable x:TypeArguments="x:String" Name="PageLinkEdited" />
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="QueueItems" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[Not String.IsNullOrEmpty(node.Element(&quot;title&quot;).Value.ToString)]" DisplayName="Private: If" sap:VirtualizedContainerService.HintSize="1326,794" sap2010:WorkflowViewState.IdRef="If_9">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="947,646" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Private: Assign Page Title" sap:VirtualizedContainerService.HintSize="905,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[PageLink]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[node.Element("link").Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[Not BlackListedURLs.Contains(PageLink)]" DisplayName="If URL is NOT Blacklisted" sap:VirtualizedContainerService.HintSize="905,454" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="526,306" sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="Preamble" />
                                <Variable x:TypeArguments="x:String" Name="DifferentPreviousURL" />
                                <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[New Dictionary(Of String, Object)]" Name="QueueItemData" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[in_CheckIfInQueue = True]" DisplayName="Choose If To Check If Item Already Exists In Queue" sap:VirtualizedContainerService.HintSize="484,214" sap2010:WorkflowViewState.IdRef="If_13">
                                <If.Then>
                                  <Sequence DisplayName="Check If In Queue And Add If Not" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Private: Get Queue Item" FilterStrategy="StartsWith" FolderPath="[in_Config(&quot;FolderPathOrch&quot;).ToString.Trim]" sap:VirtualizedContainerService.HintSize="741,22" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New, InProgress, Failed, Successful, Abandoned, Retried" QueueName="[QueueName]" Reference="[PageLink]" Result="[QueueItems]" Top="1" />
                                    <If Condition="[QueueItems.Count = 0]" DisplayName="If Queue Item Not Found" sap:VirtualizedContainerService.HintSize="741,5591" sap2010:WorkflowViewState.IdRef="If_8">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Add To Queue" sap:VirtualizedContainerService.HintSize="596,5443" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="PageMetaData" />
                                            <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="PageTags" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Private: Assign Page Title" sap:VirtualizedContainerService.HintSize="554,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[PageTitle]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[node.Element("title").Value]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Private: Assign Node Text" sap:VirtualizedContainerService.HintSize="554,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[NodeText]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[node.Element(ContentNamespace+"encoded").Value]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Private: Assign List Of Metadata" sap:VirtualizedContainerService.HintSize="554,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[PageMetaData]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(sxl:XElement)">[node.Elements(WPNamespace + "postmeta").ToList]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign List Of Tags" sap:VirtualizedContainerService.HintSize="554,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[PageTags]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(sxl:XElement)">[node.Elements(WPNamespace + "category").ToList]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Sequence DisplayName="Assign and Preamble And Body Text" sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Find Preamble" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[Preamble]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[RegEx.Match(NodeText, "^(?!\[).*?(?=\n\n|\[\D*\])",RegexOptions.Multiline).Value]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <If Condition="[Not String.IsNullOrWhiteSpace(Preamble)]" DisplayName="If Any Preamble Text" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_3">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign DisplayName="Remove Preamble From Rest" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[BodyText]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[NodeText.Replace(Preamble,"")]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[Preamble]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[System.Net.WebUtility.HtmlDecode(Preamble).Trim]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Assign DisplayName="Remove Preamble From Rest" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[BodyText]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[System.Net.WebUtility.HtmlDecode(NodeText).Trim]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Else>
                                            </If>
                                            <ui:Replace DisplayName="Remove &quot;Search Data&quot; Contact Info" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[BodyText]" IsBuilderTabModified="False" Pattern="[&quot;&lt;p id=&quot;&quot;searchdata&quot;&quot; style=&quot;&quot;display: none;&quot;&quot;&gt;.*&lt;\/p&gt;&quot;]" RegexOption="IgnoreCase, Compiled" Result="[BodyText]">
                                              <ui:Replace.Replacement>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </ui:Replace.Replacement>
                                            </ui:Replace>
                                          </Sequence>
                                          <If Condition="[PageLink.LastIndexOf(&quot;/&quot;) = PageLink.Length-1]" DisplayName="If Last Character Is A Forward Slash" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="If_5">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[PageLinkEdited]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[PageLink.Substring(0,PageLink.Length-1)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[PageLinkEdited]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                          <TryCatch DisplayName="Try Catch - If Same End Path For Page" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <If Condition="[PageLink.Substring(PageLink.Length-Net.WebUtility.UrlEncode(PageTitle).Length).ToLower = Net.WebUtility.UrlEncode(PageTitle).ToLower]" DisplayName="If Same End Path For Page" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_6">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Assign DisplayName="Assign Empty Previous URL" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[DifferentPreviousURL]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Then>
                                                <If.Else>
                                                  <Assign DisplayName="Assign Previous URL" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[DifferentPreviousURL]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Else>
                                              </If>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="573,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <Assign DisplayName="Assign Previous URL" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[DifferentPreviousURL]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <Sequence DisplayName="Create Queue Item Data Dictionary" sap:VirtualizedContainerService.HintSize="554,4336" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <InvokeMethod DisplayName="Private: Add Page Link" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Link</InArgument>
                                              <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Page Title" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Title</InArgument>
                                              <InArgument x:TypeArguments="x:String">[PageTitle]</InArgument>
                                            </InvokeMethod>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <InvokeMethod DisplayName="Add Preamble" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
                                                    <InvokeMethod.TargetObject>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                    </InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="x:String">Preamble</InArgument>
                                                    <InArgument x:TypeArguments="x:String">[Preamble]</InArgument>
                                                  </InvokeMethod>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <InvokeMethod DisplayName="Add Body" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                                                    <InvokeMethod.TargetObject>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                    </InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="x:String">Body</InArgument>
                                                    <InArgument x:TypeArguments="x:String">[BodyText]</InArgument>
                                                  </InvokeMethod>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <InvokeMethod DisplayName="Add Previous URL" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                                                    <InvokeMethod.TargetObject>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                    </InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="x:String">PreviousURL</InArgument>
                                                    <InArgument x:TypeArguments="x:String">[DifferentPreviousURL]</InArgument>
                                                  </InvokeMethod>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <InvokeMethod DisplayName="Private: Add PubDate" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">PublishDate</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element("pubDate").Value]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add PubDate GMT" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">PublishDateGMT</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_date_gmt").Value]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post ID" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">ID</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_id").Value]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Name" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Name</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_name").Value]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Parent ID" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">ParentID</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_parent").Value]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Parent ID" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Creator</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(DCNamespace + "creator").Value]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Tags" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Tags</InArgument>
                                              <InArgument x:TypeArguments="x:String">[String.Join(";",PageTags).ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Creator" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Post_Creator</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(DCNamespace + "creator").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Description" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Description</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element("description").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post Post_Date" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Post_Date</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_date").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Comment_Status" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Comment_Status</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "comment_status").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Ping_Status" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_18" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Ping_Status</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "ping_status").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Status" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_19" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Status</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "status").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Menu_Order" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_20" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Manu_Order</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "menu_order").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add Post_Type" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_21" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Post_Type</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_type").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <InvokeMethod DisplayName="Private: Add isSticky" sap:VirtualizedContainerService.HintSize="512,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_22" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">IsSticky</InArgument>
                                              <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "is_sticky").Value.ToString]</InArgument>
                                            </InvokeMethod>
                                            <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="Private: For Each Meta Data" sap:VirtualizedContainerService.HintSize="512,839" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[PageMetaData]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="sxl:XElement">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sxl:XElement" Name="metadataitem" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,705" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:String" Name="MetaDataKey" />
                                                      <Variable x:TypeArguments="x:String" Name="MetaDataKeyWithCount" />
                                                      <Variable x:TypeArguments="x:Int32" Default="0" Name="Count" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign DisplayName="Assign MetaDataKey" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[MetaDataKey]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[metadataitem.Element(WPNamespace + "meta_key").Value]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign NewMetaDataKey" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[MetaDataKeyWithCount]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[MetaDataKey]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:InterruptibleWhile Condition="[QueueItemData.ContainsKey(MetaDataKeyWithCount)]" DisplayName="While MetaDataKey Exists In Dictionary" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                                                      <ui:InterruptibleWhile.Body>
                                                        <Sequence DisplayName="Count And Add As New MetaKey" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[MetaDataKeyWithCount]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[MetaDataKey + Count.ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </ui:InterruptibleWhile.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InterruptibleWhile>
                                                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,322" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                                      <TryCatch.Try>
                                                        <InvokeMethod DisplayName="Private: Add Previous URL" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                                                          <InvokeMethod.TargetObject>
                                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                          </InvokeMethod.TargetObject>
                                                          <InArgument x:TypeArguments="x:String">[metadataitem.Element(WPNamespace + "meta_key").Value]</InArgument>
                                                          <InArgument x:TypeArguments="x:Object">[metadataitem.Element(WPNamespace + "meta_value").Value]</InArgument>
                                                        </InvokeMethod>
                                                      </TryCatch.Try>
                                                      <TryCatch.Catches>
                                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,160" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ActivityAction x:TypeArguments="s:Exception">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                            </ActivityAction.Argument>
                                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Transaction with reference &quot; + PageLink + &quot; had meta data with same key.&quot;]" />
                                                          </ActivityAction>
                                                        </Catch>
                                                      </TryCatch.Catches>
                                                    </TryCatch>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ForEach>
                                          </Sequence>
                                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="554,287" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                            <TryCatch.Try>
                                              <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Private: Add Queue Item" FolderPath="[in_Config(&quot;FolderPathOrch&quot;).ToString.Trim]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" ItemInformationCollection="[QueueItemData]" Priority="Normal" QueueType="[QueueName]" Reference="[PageLink]">
                                                <ui:AddQueueItem.ItemInformation>
                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                                </ui:AddQueueItem.ItemInformation>
                                              </ui:AddQueueItem>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Failed to add queue item with reference &quot; + PageLink]" />
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Add To Queue" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="PageMetaData" />
                                      <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="PageTags" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Private: Assign Page Title" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[PageTitle]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[node.Element("title").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Private: Assign Node Text" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[NodeText]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[node.Element(ContentNamespace+"encoded").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Private: Assign List Of Metadata" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[PageMetaData]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:List(sxl:XElement)">[node.Elements(WPNamespace + "postmeta").ToList]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign List Of Tags" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[PageTags]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:List(sxl:XElement)">[node.Elements(WPNamespace + "category").ToList]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence DisplayName="Assign and Preamble And Body Text" sap:VirtualizedContainerService.HintSize="434,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Find Preamble" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[Preamble]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[RegEx.Match(NodeText, "^(?!\[).*?(?=\n\n|\[\D*\])",RegexOptions.Multiline).Value]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[Not String.IsNullOrWhiteSpace(Preamble)]" DisplayName="If Any Preamble Text" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_10">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Remove Preamble From Rest" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[BodyText]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[NodeText.Replace(Preamble,"")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[Preamble]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[System.Net.WebUtility.HtmlDecode(Preamble).Trim]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Assign DisplayName="Remove Preamble From Rest" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[BodyText]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Net.WebUtility.HtmlDecode(NodeText).Trim]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Else>
                                      </If>
                                      <ui:Replace DisplayName="Remove &quot;Search Data&quot; Contact Info" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[BodyText]" IsBuilderTabModified="False" Pattern="[&quot;&lt;p id=&quot;&quot;searchdata&quot;&quot; style=&quot;&quot;display: none;&quot;&quot;&gt;.*&lt;\/p&gt;&quot;]" RegexOption="IgnoreCase, Compiled" Result="[BodyText]">
                                        <ui:Replace.Replacement>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:Replace.Replacement>
                                      </ui:Replace>
                                    </Sequence>
                                    <If Condition="[PageLink.LastIndexOf(&quot;/&quot;) = PageLink.Length-1]" DisplayName="If Last Character Is A Forward Slash" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="If_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[PageLinkEdited]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[PageLink.Substring(0,PageLink.Length-1)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[PageLinkEdited]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                    <TryCatch DisplayName="Try Catch - If Same End Path For Page" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch.Try>
                                        <If Condition="[PageLink.Substring(PageLink.Length-Net.WebUtility.UrlEncode(PageTitle).Length).ToLower = Net.WebUtility.UrlEncode(PageTitle).ToLower]" DisplayName="If Same End Path For Page" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_12">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Assign DisplayName="Assign Empty Previous URL" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[DifferentPreviousURL]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                          <If.Else>
                                            <Assign DisplayName="Assign Previous URL" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[DifferentPreviousURL]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Else>
                                        </If>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="573,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <Assign DisplayName="Assign Previous URL" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[DifferentPreviousURL]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                    <Sequence DisplayName="Create Queue Item Data Dictionary" sap:VirtualizedContainerService.HintSize="434,3548" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InvokeMethod DisplayName="Private: Add Page Link" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_23" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Link</InArgument>
                                        <InArgument x:TypeArguments="x:String">[PageLink]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Page Title" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_24" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Title</InArgument>
                                        <InArgument x:TypeArguments="x:String">[PageTitle]</InArgument>
                                      </InvokeMethod>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <InvokeMethod DisplayName="Add Preamble" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_25" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Preamble</InArgument>
                                              <InArgument x:TypeArguments="x:String">[Preamble]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <InvokeMethod DisplayName="Add Body" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_26" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">Body</InArgument>
                                              <InArgument x:TypeArguments="x:String">[BodyText]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="280,227" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <InvokeMethod DisplayName="Add Previous URL" sap:VirtualizedContainerService.HintSize="238,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_27" MethodName="Add">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">PreviousURL</InArgument>
                                              <InArgument x:TypeArguments="x:String">[DifferentPreviousURL]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <InvokeMethod DisplayName="Private: Add PubDate" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_28" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">PublishDate</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element("pubDate").Value]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add PubDate GMT" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_29" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">PublishDateGMT</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_date_gmt").Value]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post ID" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_30" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">ID</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_id").Value]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Name" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_31" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Name</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_name").Value]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Parent ID" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_32" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">ParentID</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_parent").Value]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Parent ID" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_33" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Creator</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(DCNamespace + "creator").Value]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Tags" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_34" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Tags</InArgument>
                                        <InArgument x:TypeArguments="x:String">[String.Join(";",PageTags).ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Creator" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_35" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Post_Creator</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(DCNamespace + "creator").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Description" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_36" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Description</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element("description").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post Post_Date" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_37" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Post_Date</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_date").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Comment_Status" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_38" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Comment_Status</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "comment_status").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Ping_Status" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_39" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Ping_Status</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "ping_status").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Status" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_40" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Status</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "status").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Menu_Order" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_41" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Manu_Order</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "menu_order").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add Post_Type" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_42" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">Post_Type</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "post_type").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <InvokeMethod DisplayName="Private: Add isSticky" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_43" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">IsSticky</InArgument>
                                        <InArgument x:TypeArguments="x:String">[node.Element(WPNamespace + "is_sticky").Value.ToString]</InArgument>
                                      </InvokeMethod>
                                      <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="Private: For Each Meta Data" sap:VirtualizedContainerService.HintSize="238,51" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[PageMetaData]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sxl:XElement">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sxl:XElement" Name="metadataitem" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,434" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="MetaDataKey" />
                                                <Variable x:TypeArguments="x:String" Name="MetaDataKeyWithCount" />
                                                <Variable x:TypeArguments="x:Int32" Default="0" Name="Count" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign MetaDataKey" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[MetaDataKey]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[metadataitem.Element(WPNamespace + "meta_key").Value]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign NewMetaDataKey" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[MetaDataKeyWithCount]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[MetaDataKey]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:InterruptibleWhile Condition="[QueueItemData.ContainsKey(MetaDataKeyWithCount)]" DisplayName="While MetaDataKey Exists In Dictionary" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                                                <ui:InterruptibleWhile.Body>
                                                  <Sequence DisplayName="Count And Add As New MetaKey" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[Count + 1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[MetaDataKeyWithCount]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[MetaDataKey + Count.ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </ui:InterruptibleWhile.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:InterruptibleWhile>
                                              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <TryCatch.Try>
                                                  <InvokeMethod DisplayName="Private: Add Previous URL" sap:VirtualizedContainerService.HintSize="238,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_44" MethodName="Add">
                                                    <InvokeMethod.TargetObject>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[QueueItemData]</InArgument>
                                                    </InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="x:String">[metadataitem.Element(WPNamespace + "meta_key").Value]</InArgument>
                                                    <InArgument x:TypeArguments="x:Object">[metadataitem.Element(WPNamespace + "meta_value").Value]</InArgument>
                                                  </InvokeMethod>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Transaction with reference &quot; + PageLink + &quot; had meta data with same key.&quot;]" />
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEach>
                                    </Sequence>
                                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,322" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                      <TryCatch.Try>
                                        <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Private: Add Queue Item" FolderPath="[in_Config(&quot;FolderPathOrch&quot;).ToString.Trim]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_2" ItemInformationCollection="[QueueItemData]" Priority="Normal" QueueType="[QueueName]" Reference="[PageLink]">
                                          <ui:AddQueueItem.ItemInformation>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                          </ui:AddQueueItem.ItemInformation>
                                        </ui:AddQueueItem>
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,160" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:Exception">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                            </ActivityAction.Argument>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Failed to add queue item with reference &quot; + PageLink]" />
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:LogMessage DisplayName="Log Message Blacklisted" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;The URL &quot; + PageLink + &quot; is blacklisted and will not be handled&quot;]" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;Item with page link &quot; + node.Element(&quot;link&quot;).Value + &quot; is not added to queue. Title is missing.&quot;]" />
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </If.Then>
    </If>
    <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get a transaction item from the specified Orchestrator queue.&#xA;If queues are not used in this process, replace this activity with the appropriated logic to retrieve transaction items.&#xA;For example, if transactions are rows from a DataTable, the row corresponding to the current transaction is retrieved at this point." DisplayName="Get transaction item" FolderPath="[in_Config(&quot;FolderPathOrch&quot;).ToString.Trim]" sap:VirtualizedContainerService.HintSize="1718,214" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" TransactionItem="[out_TransactionItem]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetQueueItem>
    <If sap2010:Annotation.AnnotationText="This optional step can be used to include more information about a transaction item and it is used mainly for logging and visualization purposes.&#xA;For example, if transaction items are invoices, then out_TransactionID can be the invoice number, out_TransactionField1 can be the invoice date and out_TransactionField2 can be the invoice amount." Condition="[out_TransactionItem isNot Nothing]" DisplayName="If a new transaction item is retrieved, get additional information about it" sap:VirtualizedContainerService.HintSize="1718,629" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="Write data to the added log fields that identify the transaction." DisplayName="Add transaction information to log fields" sap:VirtualizedContainerService.HintSize="304,394" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign out_TransactionID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign out_TransactionField1" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionField1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign out_TransactionField2" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionField2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>